{
   "AWSTemplateFormatVersion" : "2010-09-09",
   "Description" : "EC2",
   "Parameters" : {
    
    "STACKNAME": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String"
    },

    "ImageId" : {
      "Type" : "String",
      "Default" : "ami-66506c1c"
    },

    "InstanceType" : {
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : ["t2.micro", "m1.small", "m1.large"],
      "Description" : "Enter t2.micro, m1.small, or m1.large. Default is t2.micro."
    },

    "Size" : {
      "Type" : "Number",
      "Default" : "16"
    },

    "VolumeType" : {
      "Type" : "String",
      "Default" : "gp2"
    },

    "PublicSubnetId":{
      "Type" : "String",
      "Default" : ""
    },

    "PrivateSubnetId1":{
      "Type" : "String",
      "Default" : ""
    },

    "PrivateSubnetId2":{
      "Type" : "String",
      "Default" : ""
    },

    "ec2SG":{
      "Type" : "String",
      "Default" : ""
    },

    "RDSSG":{
      "Type" : "String",
      "Default" : ""
    },

    "csye6225vpc":{
      "Type" : "String",
      "Default" : ""
    },

    "lambdaarn":{
      "Type" : "String",
      "Default" : ""
    }
   },

   "Resources" : {

      "EC2" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
            "ImageId" : { "Ref" : "ImageId" },
            "SecurityGroupIds": [
              {"Ref" : "ec2SG" }
            ],
            "SubnetId": {"Ref" : "PublicSubnetId" }, 
            "KeyName": "MyKeyPair",
            "InstanceType" : { "Ref" : "InstanceType" },
            "DisableApiTermination" : "true",
            "UserData": {
              "Fn::Base64": {
                  "Fn::Join": [
                    "",
                    [
                      "#!/bin/bash -xe \n",
                      "sudo apt-get update \n",
                      "sudo apt-get install curl -y \n",
                      "sudo apt-get install ruby -y \n",
                      "curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - \n",
                      "sudo apt-get update \n",
                      "sudo apt-get install python-software-properties -y \n",
                      "sudo apt-get install nodejs -y \n",
                      "sudo apt-get install wget -y \n",
                      "sudo mkdir testtemp \n",
                      "cd testtemp/ \n",
                      "sudo wget https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/debian_amd64/amazon-ssm-agent.deb \n",
                      "sudo dpkg -i amazon-ssm-agent.deb \n",
                      "sudo systemctl enable amazon-ssm-agent \n",
                      "cd .. \n",
                      "sudo mkdir log \n",
                      "cd log/ \n",
                      "sudo wget https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip \n",
                      "sudo unzip AmazonCloudWatchAgent.zip \n",
                      "sudo chmod +x install.sh \n",
                      "sudo ./install.sh \n",
                      "cd .. \n",
                      "sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:configfile -s \n",
                      "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
                      "sudo chmod +x ./install \n",
                      "sudo ./install auto \n",
                      "sudo service codedeploy-agent start \n"
                    ]
                  ]
              }
            },

            "Tags" : [
               {
                 "Key" : "Name",
                 "Value" : "MyTag"
               } 
            ]           
         }
      },

      "Volume" : {
         "Type":"AWS::EC2::Volume",
         "Properties" : {
            "Size" : { "Ref" : "Size" },
            "Encrypted" : "true",
            "VolumeType" : { "Ref" : "VolumeType" },
            "AvailabilityZone" : { "Fn::GetAtt" : [ "EC2", "AvailabilityZone" ] }
         }
      },

      "myDynamoDBTable" : {
        "Type" : "AWS::DynamoDB::Table",
        "Properties" : {
          "AttributeDefinitions" : [
            {
              "AttributeName" : "id",
              "AttributeType" : "S"   
            }
          ],
          "KeySchema" : [
            {
              "AttributeName" : "id",
              "KeyType" : "HASH"
            }
          ],
          "ProvisionedThroughput" : {
            "ReadCapacityUnits" : "5",
            "WriteCapacityUnits" : "5"
          },
          "TableName" : "csye6225",
          "TimeToLiveSpecification" : 
            {
              "AttributeName" : "ttl",
              "Enabled" : true
            }
          
        }
      },

      "MyDB" : {
        "Type" : "AWS::RDS::DBInstance",
        "Properties" : {
          "DBName" : "csye6225",
          "Engine" : "MySQL",
          "EngineVersion" : "5.6.37",
          "DBInstanceClass" : "db.t2.medium",
          "VPCSecurityGroups" : [
            {"Ref" : "RDSSG"}
          ],
          "DBSubnetGroupName": {"Ref" : "myDBSubnetGroup" },
          "MultiAZ" : "false",
          "DBInstanceIdentifier" : "csye6225-spring2018",
          "MasterUsername" : "csye6225master",
          "MasterUserPassword" : "csye6225password",
          "PubliclyAccessible" : "false",
          "Tags" : [ { "Key" : "Name", "Value" : "csye6225" } ],
          "AllocatedStorage" : "10"
        }
      },

      "myDBSubnetGroup" : {
         "Type" : "AWS::RDS::DBSubnetGroup",
         "Properties" : {
            "DBSubnetGroupDescription" : "description",
            "SubnetIds" : [ {"Ref" : "PrivateSubnetId1" }, {"Ref" : "PrivateSubnetId2" } ],
            "Tags" : [ {"Key" : "String", "Value" : "String"} ]
         }
      },

      "MySNSTopic" : {
        "Type" : "AWS::SNS::Topic",
        "Properties" : {
          "Subscription" : [{
              "Endpoint" : { "Ref": "lambdaarn" },
              "Protocol" : "lambda"
          }],
          "TopicName" : "password_reset"
        }
      },

      "ImageS3Bucket" : {
        "Type" : "AWS::S3::Bucket",
         "Properties" : {
           "BucketName" : "s3.csye6225-spring2018-jiaxi.me"
        }
      }

    } 
}